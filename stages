1. NodeJS PoC with HTTP RPCs and only persist-all nodes DONE
    A. RPC mockup
    B. get/set
    C. P2P replication
    D. Vector clocks
    E. Replication awareness
2. Finish design of persist-some nodes (largest outstanding question: can we avoid sending the history? YES)
    A. Generating partial updates
    B. Accepting partial updates
    C. Request-initiated fetching
    D. Clearly distinguish between urdata (propagates up/sideways) and indices (propagates down)
    E. Cache chaining
    F. Writeback
    G. Rolling leases
3. Implement "enough" of the schema system
3. Design and implement sharding/replication for large subsystems.
4. Reimplement in Rust
4. Non-critical optimizations
    A. Replicate data once over any given link
4. User-RPCs; may require control plane work, but after that it's just barriers
5. Views: acts like an RPC, but handles by the nearest subsystem with all the data
