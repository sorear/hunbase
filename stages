1. NodeJS PoC with HTTP RPCs and only persist-all nodes DONE
    A. RPC mockup
    B. get/set
    C. P2P replication
    D. Vector clocks
    E. Replication awareness
2. Finish design of persist-some nodes (largest outstanding question: can we avoid sending the history? YES)
    A. Generating partial updates
    B. Accepting partial updates
    C. Request-initiated fetching
    D. Clearly distinguish between urdata (propagates up/sideways) and indices (propagates down)
    E. Cache chaining
    F. Writeback
    G. Rolling leases
    H. Handoff (Optional; successor nodes work nearly as well)
3. Implement "enough" of the schema system
4. Advanced topics
    A. Barriers
    B. Initial user-RPC
    C. Suppress data changes when not useful
    D. Replicate data once over any given link
    E. Pipelineable slow indices
    F. Views: acts like an RPC, but handles by the nearest subsystem with all the data
5. Design next protocol
6. Design and implement sharding/replication for large subsystems.
7. Reimplement in Rust
